<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="py" module="max" category="Python">
	<digest>Evaluate python code</digest>
	<description>
		<o>py</o> takes as input to evaluate the success of an operation in a test patcher. 
	</description>
	
	
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">shakfu</metadata>
		<metadata name="tag">Python</metadata>
	</metadatalist>
	

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="name" optional="0" type="symbol">
			<digest>Name of object</digest>
			<description>
				Every py object in a patcher must be named.
			</description>
		</objarg>
		<objarg name="file" optional="0" type="symbol">
			<digest>Path to a python file</digest>
			<description>
				A python file to load into the code editor.
			</description>
		</objarg>
	</objarglist>		
	<objarg name="debug" optional="1" type="bool">
			<digest>Debug mode</digest>
			<description>
				Switch on/off debug logging of the py object to the console.
			</description>
		</objarg>
	</objarglist>
	

	<!--MESSAGES-->
	<methodlist>
		<method name="import">
			<arglist>
				<objarg name="module" optional="0" type="symbol">
					<digest>Name of module</digest>
					<description>
						Must be a valid name of an importable python module. 
					</description>
				</objarg>
			</arglist>
			<digest>import a python module</digest>
			<description>
				Can import standard builtin modules, a custom builtin 'api' to access the max api from python or any modules available on python's sys.path.
			</description>
		</method>	
	</methodlist>
	
	<methodlist>
		<method name="eval">
			<arglist />
			<digest>Evaluate a python expression</digest>
			<description>
				If no input is received, the assertion is deemed to have failed.
			</description>
		</method>	
	</methodlist>
	
	<methodlist>
		<method name="exec">
			<arglist />
			<digest>Execute a python statement into the object namespace</digest>
			<description>
				Can modify and inject new code and data into the namespace.
			</description>
		</method>	
	</methodlist>
	
	<methodlist>
		<method name="execfile">
			<arglist />
			<digest>Execute a python file into the object namespace</digest>
			<description>
				Can modify and inject new code and data into the namespace.
			</description>
		</method>	
	</methodlist>
	
	<methodlist>
		<method name="read">
			<arglist />
			<digest>Read a python file into the code-editor</digest>
			<description>
				Loads a python file into the code-editor.
			</description>
		</method>	
	</methodlist>
	
	
	<methodlist>
		<method name="load">
			<arglist />
			<digest>Loads a python file into the code editor and excutees in the object namespace/digest>
			<description>
				Loads and executes a file (like a 'read' msg followed by 'execfile' on the same file.)
			</description>
		</method>	
	</methodlist>
	
	
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="tags" get="1" set="1" type="symbol" size="1">
			<digest>Optional tags to assist searching</digest>
			<description>
				Tags can be used to assist with searching the database of test results after automated testing has been executed.
				Tags are optional and are space-delimited.
				You can define up to 16 tags.
			</description>
		</attribute>
	</attributelist>


	<!--SEEALSO-->
	<seealsolist>
		<seealso name="js" />
	</seealsolist>


</c74object>
