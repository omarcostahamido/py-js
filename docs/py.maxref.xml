<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="py" module="max" category="Python">

	<digest>Evaluate python code</digest>
	<description>
		<o>py</o> takes as input to evaluate the success of an operation in a test patcher. 
	</description>
	
	
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">shakfu</metadata>
		<metadata name="tag">Python</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="anything">
			<digest>py object inlet</digest>
			<description>The py object has only one inlet.</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		
		<outlet id="0" type="bang">
			<digest>Right inlet for bang notification after end of an operation</digest>
		</outlet>

		<outlet id="1" type="anything">
			<digest>Left inlet for all outputs from python operations</digest>
		</outlet>

	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="name" optional="0" type="symbol">
			<digest>Name of object</digest>
			<description>
				Every py object in a patcher must be named.
			</description>
		</objarg>
		<objarg name="file" optional="0" type="symbol">
			<digest>Path to a python file</digest>
			<description>
				A python file to <m>load</m> into the code editor.
			</description>
		</objarg>
		<objarg name="debug" optional="1" type="bool">
			<digest>Debug mode</digest>
			<description>
				Switch on/off debug logging of the py object to the console.
			</description>
		</objarg>
	</objarglist>
	

	<!--MESSAGES-->
	<methodlist>
		<method name="import">
			<arglist>
				<arg name="module" optional="0" type="symbol" />
			</arglist>
			<digest>import a python module</digest>
			<description>
				Can import standard builtin modules, a custom builtin 'api' to access the max api from python or any modules available on python's sys.path.
			</description>
		</method>
		<method name="eval">
			<arglist>
				<arg name="expression" optional="0" type="symbol" />
			</arglist>
			<digest>Evaluate a python expression</digest>
			<description>
				The <a>expression</a> is evaluated in the context of the <o>py</o> object namespace and outputs results to the left outlet and a bang from the right outlet to signal end of evaluation.
			</description>
		</method>	
		<method name="exec">
			<arglist>
				<arg name="statement" optional="0" type="symbol" />
			</arglist>
			<digest>Execute a python statement into the object namespace</digest>
			<description>
				Can modify and inject new code and data into the namespace.
			</description>
		</method>
		<method name="execfile">
			<arglist>
				<arg name="filepath" optional="0" type="symbol" />
			</arglist>
			<digest>Execute a python file into the object namespace</digest>
			<description>
				Can modify and inject new code and data into the namespace.
			</description>
		</method>
		<method name="assign">
			<arglist>
				<arg name="varname" optional="0" type="symbol" />
				<arg name="data" optional="0" type="atom" />
			</arglist>
			<digest>Creates a new variable in the python namespace with a list of the data</digest>
			<description>
				Used for sending max data into the <o>py</o> instance's namespace, so it can be used by python code. 
			</description>
		</method>
		<method name="anything">
			<arglist>
				<arg name="identifier" optional="0" type="symbol" />
				<arg name="args" optional="0" type="atom" />
			</arglist>
			<digest>Tries to call or evaluate identifier based on simple rules</digest>
			<description>
				Checks whether idetifier exists in py namespace, if is a callable, and then calls the corresponding callable with the args and outputs the result.
			</description>
		</method>
		<method name="read">
			<arglist>
				<arg name="filepath" optional="0" type="symbol" />
			</arglist>
			<digest>Read a python file into the code-editor</digest>
			<description>
				Loads a python file into the code-editor.
			</description>
		</method>
		<method name="load">
			<arglist>
				<arg name="filepath" optional="0" type="symbol" />
			</arglist>
			<digest>Loads a python file into the code editor and excutees in the object namespace</digest>
			<description>
				Loads and executes a file (like a 'read' msg followed by 'execfile' on the same file.)
			</description>
		</method>	
	</methodlist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="js" />
	</seealsolist>


</c74object>
