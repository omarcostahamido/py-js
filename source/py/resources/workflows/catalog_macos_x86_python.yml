name: catalog_macos_x86_python

on:
  workflow_dispatch:

jobs:
  build:
    name: builds on macos-10.15 python-${{ matrix.python-version }}
    runs-on: macos-10.15
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: '0'

      - name: cache downloads
        id: cache-downloads
        uses: actions/cache@v3
        env:
          cache-name: pyjs-cache-1
        with:
          path: |
            source/py/targets/build/downloads
            source/py/targets/build/lib/bzip2
            source/py/targets/build/lib/openssl
            source/py/targets/build/lib/xz
          key: $${{ env.cache-name }}-${{ hashFiles('source/py/resources/pyjs-dependencies.txt') }}

      - name: setup python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: display python version
        run: python3 --version

      - name: build_default
        run: make catalog-default

      - name: build_shared_pkg
        run: make catalog-shared-pkg

      - name: build_shared_ext
        run: make catalog-shared-ext

      - name: build_static_ext
        run: make catalog-static-ext

      - name: build_framework_pkg
        run: make catalog-framework-pkg

      - name: build_framework_ext
        run: make catalog-framework-ext

      - name: package externals
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          PACKAGE_NAME=`echo $GITHUB_REPOSITORY | sed 's/.*\///g'`
          PACKAGE_REV=`echo $GITHUB_SHA | sed -e 's/^[[:alnum:]]\{7\}/&-/g' | sed 's/-.*//'`
          mkdir -p $PACKAGE_NAME
          if [ -e package-info.json ]; then cp package-info.json $PACKAGE_NAME; fi
          if [ -e package-info.json.in ]; then cp package-info.json.in $PACKAGE_NAME; fi
          for f in *.md; do [ -e "$f" ] && cp "$f" $PACKAGE_NAME ; done
          if [ -e icon.png ]; then cp icon.png $PACKAGE_NAME; fi
          if [ -d docs ]; then cp -r docs $PACKAGE_NAME; fi
          if [ -d examples ]; then cp -r examples $PACKAGE_NAME; fi
          if [ -d externals ]; then cp -a externals $PACKAGE_NAME; fi
          if [ -d extras ]; then cp -r extras $PACKAGE_NAME; fi
          if [ -d help ]; then cp -r help $PACKAGE_NAME; fi
          if [ -d init ]; then cp -r init $PACKAGE_NAME; fi
          if [ -d javascript ]; then cp -r init $PACKAGE_NAME; fi
          if [ -d jsextensions ]; then cp -r jsextensions $PACKAGE_NAME; fi
          if [ -d patchers ]; then cp -r patchers $PACKAGE_NAME; fi
          if [ -d support ]; then cp -a support $PACKAGE_NAME; fi

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.python_version }}-${{ steps.short-sha.outputs.sha }}
          path: ${{ github.event.repository.name }}

