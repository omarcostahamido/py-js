name: pyjs-relocatable

on:
  workflow_dispatch:
    inputs:
      py_version:
        type: choice
        description: select a python version
        default: '3.9'
        required: true
        options: 
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'      
      pip_modules:
        type: string
        description: provide packages to install
        required: true

env:
  arch: darwin-x86

jobs:
  build:
    runs-on: macos-10.15

    steps:

    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        fetch-depth: '0'

    - uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 7

    - name: Setup python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ github.event.inputs.py_version }}

    - name: Display python version
      run: python3 --version

    - name: Import development certificate
      uses: apple-actions/import-codesign-certs@v1
      with: 
        p12-file-base64: ${{ secrets.MACOS_DEV_CERTIFICATE }}
        p12-password: ${{ secrets.MACOS_DEV_PWD }}

    - name: Build externals
      working-directory: ./source/py
      run: python3 -m builder pyjs relocatable_pkg --pip-modules="${{ github.event.inputs.pip_modules }}" --install --build

    - name: Sign externals and support folder
      env:
        DEV_ID: ${{ secrets.DEV_ID }}
      run: make sign

    - name: Notarize externals
      uses: devbotsxyz/xcode-notarize@v1
      with:
        product-path: "externals/py.mxo"
        appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
        appstore-connect-password: ${{ secrets.NOTARIZATION_PWD }}

    - name: Notarize externals
      uses: devbotsxyz/xcode-notarize@v1
      with:
        product-path: "externals/pyjs.mxo"
        appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
        appstore-connect-password: ${{ secrets.NOTARIZATION_PWD }}

    - name: Notarize framework
      uses: devbotsxyz/xcode-notarize@v1
      with:
        product-path: "support/Python.framework"
        appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
        appstore-connect-password: ${{ secrets.NOTARIZATION_PWD }}
        primary-bundle-id: 'org.me.pyjs-framework'


    - name: Staple externals
      uses: devbotsxyz/xcode-staple@v1
      with:
        product-path: "externals/py.mxo"

    - name: Staple externals
      uses: devbotsxyz/xcode-staple@v1
      with:
        product-path: "externals/pyjs.mxo"

    - name: Staple framework
      uses: devbotsxyz/xcode-staple@v1
      with:
        product-path: "support/Python.framework"

    - name: Create Max package
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_SHA: ${{ github.sha }}
      run: |
        PACKAGE_NAME=`echo $GITHUB_REPOSITORY | sed 's/.*\///g'`
        PACKAGE_REV=`echo $GITHUB_SHA | sed -e 's/^[[:alnum:]]\{7\}/&-/g' | sed 's/-.*//'`
        mkdir -p $PACKAGE_NAME
        if [ -e package-info.json ]; then cp package-info.json $PACKAGE_NAME; fi
        if [ -e package-info.json.in ]; then cp package-info.json.in $PACKAGE_NAME; fi
        for f in *.md; do [ -e "$f" ] && cp "$f" $PACKAGE_NAME ; done
        if [ -e icon.png ]; then cp icon.png $PACKAGE_NAME; fi
        if [ -d docs ]; then cp -r docs $PACKAGE_NAME; fi
        if [ -d examples ]; then cp -r examples $PACKAGE_NAME; fi
        if [ -d externals ]; then ditto externals $PACKAGE_NAME; fi
        if [ -d extras ]; then cp -r extras $PACKAGE_NAME; fi
        if [ -d help ]; then cp -r help $PACKAGE_NAME; fi
        if [ -d init ]; then cp -r init $PACKAGE_NAME; fi
        if [ -d javascript ]; then cp -r init $PACKAGE_NAME; fi
        if [ -d jsextensions ]; then cp -r jsextensions $PACKAGE_NAME; fi
        if [ -d patchers ]; then cp -r patchers $PACKAGE_NAME; fi
        if [ -d support ]; then ditto support $PACKAGE_NAME; fi
        ditto -V -ck --keepParent $PACKAGE_NAME ${PACKAGE_NAME}.zip
        rm -rf $PACKAGE_NAME && mkdir -p $PACKAGE_NAME
        mv ${PACKAGE_NAME}.zip $PACKAGE_NAME/

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.repository.name }}-relocatable-pkg-${{ env.arch }}-${{ github.event.inputs.py_version }}-${{ steps.short-sha.outputs.sha }}
        path: ${{ github.event.repository.name }}
